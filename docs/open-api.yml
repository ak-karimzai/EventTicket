openapi: 3.0.0
info:
  title: Events Management API
  description: RESTful API for managing users, categories, events, tickets, orders, and order items.
  version: 1.0.0

servers:
  - url: https://api.example.com
    description: Production server

paths:
  /users:
    get:
      summary: Retrieve a list of users
      responses:
        '200':
          description: A list of users.
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully.

  /users/{id}:
    get:
      summary: Retrieve a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User retrieved successfully.
    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully.
    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully.

  /categories:
    get:
      summary: Retrieve a list of categories
      responses:
        '200':
          description: A list of categories.
    post:
      summary: Create a new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Category created successfully.

  /events:
    get:
      summary: Retrieve a list of events
      responses:
        '200':
          description: A list of events.
    post:
      summary: Create a new event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Event created successfully.

  /tickets:
    get:
      summary: Retrieve a list of tickets
      responses:
        '200':
          description: A list of tickets.
    post:
      summary: Create a new ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '201':
          description: Ticket created successfully.

  /orders:
    get:
      summary: Retrieve a list of orders
      responses:
        '200':
          description: A list of orders.
    post:
      summary: Place a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order placed successfully.

  /order_items:
    get:
      summary: Retrieve a list of order items
      responses:
        '200':
          description: A list of order items.
    post:
      summary: Add an item to an order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
      responses:
        '201':
          description: Order item created successfully.

components:
  schemas:
    UserDto:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the user.
        name:
          type: string
          description: Name of the user.
        email:
          type: string
          description: Email of the user.
        phone_number:
          type: string
          description: Phone number of the user.
        username:
          type: string
          description: Username of the user.
        role:
          type: string
          description: Role of the user.
        joined_at:
          type: string
          format: date-time
          description: Date the user joined.

    CategoryDto:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the category.
        title:
          type: string
          description: Title of the category.
    
    EventDto:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the event.
        title:
          type: string
          description: Title of the event.
        artist:
          type: string
          description: Name of the artist for the event.
        date:
          type: string
          format: date-time
          description: Date and time of the event.
        description:
          type: string
          description: Description of the event.
        category:
          $ref: '#/components/schemas/CategoryDto'
          description: Category of the the event belongs to.
        created_date:
          type: string
          format: date-time
          description: Date the event was created.
        last_modified_date:
          type: string
          format: date-time
          description: Date the event was last modified.

    TicketDto:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the ticket.
        title:
          type: string
          description: Title of the ticket.
        description:
          type: string
          description: Description of the ticket.
        price:
          type: number
          format: float
          description: Price of the ticket.
        event:
          $ref: '#/components/schemas/EventDto'
          description: Event of the the ticker belongs to.
        created_date:
          type: string
          format: date-time
          description: Date the ticket was created.
        last_modified_date:
          type: string
          format: date-time
          description: Date the ticket was last modified.
    
    OrderDto:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the order.
        order_placed:
          type: string
          format: date-time
          description: Date the order was placed.
        items:
          type: array
          items: 
            $ref: '#/components/schemas/OrderItemDto'
        order_paid:
          type: boolean
          description: Whether the order has been paid.

    OrderItem:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the order item.
        order_id:
          type: integer
          description: ID of the order the item belongs to.
        ticket_id:
          type: integer
          description: ID of the ticket in the order.
        amount:
          type: integer
          description: Quantity of the ticket in the order.

    OrderItemDto:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the order item.
        ticket:
          $ref: '#/components/schemas/TicketDto'
          description: ticket of the order.
        amount:
          type: integer
          description: Quantity of the ticket in the order.